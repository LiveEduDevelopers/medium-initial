{
  "config": {
    "configFile": "D:\\Projects\\medium-clone\\playwright.config.ts",
    "rootDir": "D:/Projects/medium-clone/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json",
        {
          "outputFile": "playwright-report.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 15000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "D:/Projects/medium-clone/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "D:/Projects/medium-clone/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "D:/Projects/medium-clone/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "firefox",
        "name": "firefox",
        "testDir": "D:/Projects/medium-clone/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "D:/Projects/medium-clone/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "webkit",
        "name": "webkit",
        "testDir": "D:/Projects/medium-clone/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "version": "1.49.0",
    "workers": 4,
    "webServer": null
  },
  "suites": [
    {
      "title": "example.spec.ts",
      "file": "example.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Medium Clone App",
          "file": "example.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "renders the Medium Clone heading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "status": "passed",
                      "duration": 1747,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-11-28T06:47:55.918Z",
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "a30a6eba6312f6b87ea5-5ab2793829c56c63ceed",
              "file": "example.spec.ts",
              "line": 9,
              "column": 3
            },
            {
              "title": "renders the Medium Clone heading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 2,
                      "status": "passed",
                      "duration": 6370,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-11-28T06:47:55.925Z",
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "a30a6eba6312f6b87ea5-0a4f4678e6b47cbd9625",
              "file": "example.spec.ts",
              "line": 9,
              "column": 3
            },
            {
              "title": "renders the Medium Clone heading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 4,
                      "status": "passed",
                      "duration": 2049,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-11-28T06:47:58.159Z",
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "a30a6eba6312f6b87ea5-dda53866778c470a90f2",
              "file": "example.spec.ts",
              "line": 9,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "packages.spec.ts",
      "file": "packages.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "check if required libraries are installed",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "status": "failed",
                  "duration": 29,
                  "error": {
                    "message": "ReferenceError: __dirname is not defined",
                    "stack": "ReferenceError: __dirname is not defined\n    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40",
                    "location": {
                      "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                      "column": 40,
                      "line": 6
                    },
                    "snippet": "\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                        "column": 40,
                        "line": 6
                      },
                      "message": "ReferenceError: __dirname is not defined\n\n\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-11-28T06:47:55.911Z",
                  "attachments": [],
                  "errorLocation": {
                    "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                    "column": 40,
                    "line": 6
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "23ca748dc349fcd7e881-17a48b3f10ea831f02ee",
          "file": "packages.spec.ts",
          "line": 5,
          "column": 1
        },
        {
          "title": "check if required libraries are installed",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "firefox",
              "projectName": "firefox",
              "results": [
                {
                  "workerIndex": 3,
                  "status": "failed",
                  "duration": 45,
                  "error": {
                    "message": "ReferenceError: __dirname is not defined",
                    "stack": "ReferenceError: __dirname is not defined\n    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40",
                    "location": {
                      "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                      "column": 40,
                      "line": 6
                    },
                    "snippet": "\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                        "column": 40,
                        "line": 6
                      },
                      "message": "ReferenceError: __dirname is not defined\n\n\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-11-28T06:47:56.014Z",
                  "attachments": [],
                  "errorLocation": {
                    "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                    "column": 40,
                    "line": 6
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "23ca748dc349fcd7e881-04a414c7ddb7d0b9da04",
          "file": "packages.spec.ts",
          "line": 5,
          "column": 1
        },
        {
          "title": "check if required libraries are installed",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "webkit",
              "projectName": "webkit",
              "results": [
                {
                  "workerIndex": 5,
                  "status": "failed",
                  "duration": 50,
                  "error": {
                    "message": "ReferenceError: __dirname is not defined",
                    "stack": "ReferenceError: __dirname is not defined\n    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40",
                    "location": {
                      "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                      "column": 40,
                      "line": 6
                    },
                    "snippet": "\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                        "column": 40,
                        "line": 6
                      },
                      "message": "ReferenceError: __dirname is not defined\n\n\u001b[0m \u001b[90m 4 |\u001b[39m\n \u001b[90m 5 |\u001b[39m test(\u001b[32m\"check if required libraries are installed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mconst\u001b[39m packageJsonPath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mresolve(__dirname\u001b[33m,\u001b[39m \u001b[32m\"./package.json\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 7 |\u001b[39m   \u001b[36mconst\u001b[39m packageJson \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(fs\u001b[33m.\u001b[39mreadFileSync(packageJsonPath\u001b[33m,\u001b[39m \u001b[32m\"utf-8\"\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 8 |\u001b[39m\n \u001b[90m 9 |\u001b[39m   \u001b[36mconst\u001b[39m requiredLibraries \u001b[33m=\u001b[39m [\u001b[32m\"@playwright/test\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at D:\\Projects\\medium-clone\\tests\\packages.spec.ts:6:40\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-11-28T06:47:58.544Z",
                  "attachments": [],
                  "errorLocation": {
                    "file": "D:\\Projects\\medium-clone\\tests\\packages.spec.ts",
                    "column": 40,
                    "line": 6
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "23ca748dc349fcd7e881-230a28784fa36c48a80d",
          "file": "packages.spec.ts",
          "line": 5,
          "column": 1
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2024-11-28T06:47:54.125Z",
    "duration": 11037.317000000001,
    "expected": 3,
    "skipped": 0,
    "unexpected": 3,
    "flaky": 0
  }
}